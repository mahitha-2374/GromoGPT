// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent to suggest high potential leads to GroMo Partners.
 *
 * - suggestHighPotentialLeads - A function that suggests leads most likely to convert.
 * - SuggestHighPotentialLeadsInput - The input type for the suggestHighPotentialLeads function.
 * - SuggestHighPotentialLeadsOutput - The return type for the suggestHighPotentialLeads function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestHighPotentialLeadsInputSchema = z.object({
  pastPerformanceData: z.string().describe('The past performance data of the GroMo Partner, including sales history, conversion rates, and product preferences.'),
  customerProfilesData: z.string().describe('Data about the GroMo Partner’s existing customers, including demographics, purchase history, and engagement metrics.'),
  locationData: z.string().describe('Geographical data about the GroMo Partner’s operating area, including population density, average income, and local market trends.'),
  gromoPartnerId: z.string().describe('The unique identifier of the GroMo Partner.'),
});
export type SuggestHighPotentialLeadsInput = z.infer<typeof SuggestHighPotentialLeadsInputSchema>;

const LeadSuggestionSchema = z.object({
  leadId: z.string().describe('The unique identifier of the suggested lead.'),
  probabilityOfConversion: z.number().describe('The estimated probability of this lead converting into a sale (0-1).'),
  reasoning: z.string().describe('The reasons why this lead is likely to convert, based on the provided data.'),
});

const SuggestHighPotentialLeadsOutputSchema = z.object({
  suggestedLeads: z.array(LeadSuggestionSchema).describe('A list of leads suggested by the AI, ranked by their probability of conversion.'),
  summary: z.string().describe('A summary of why these leads were selected.'),
});

export type SuggestHighPotentialLeadsOutput = z.infer<typeof SuggestHighPotentialLeadsOutputSchema>;

export async function suggestHighPotentialLeads(input: SuggestHighPotentialLeadsInput): Promise<SuggestHighPotentialLeadsOutput> {
  return suggestHighPotentialLeadsFlow(input);
}

const suggestHighPotentialLeadsPrompt = ai.definePrompt({
  name: 'suggestHighPotentialLeadsPrompt',
  input: {schema: SuggestHighPotentialLeadsInputSchema},
  output: {schema: SuggestHighPotentialLeadsOutputSchema},
  prompt: `You are an AI assistant designed to help GroMo Partners identify the leads that are most likely to convert into successful sales.

  Analyze the following data to suggest the top leads for the GroMo Partner.

  GroMo Partner ID: {{{gromoPartnerId}}}
  Past Performance Data: {{{pastPerformanceData}}}
  Customer Profiles Data: {{{customerProfilesData}}}
  Location Data: {{{locationData}}}

  Based on this information, suggest the leads that are most likely to convert. Include the leadId, probabilityOfConversion, and reasoning for each suggested lead.  Also include a summary of why these leads were selected.

  Format your response as a JSON object matching the following schema:
  ${SuggestHighPotentialLeadsOutputSchema.description}\n`,
});

const suggestHighPotentialLeadsFlow = ai.defineFlow(
  {
    name: 'suggestHighPotentialLeadsFlow',
    inputSchema: SuggestHighPotentialLeadsInputSchema,
    outputSchema: SuggestHighPotentialLeadsOutputSchema,
  },
  async input => {
    const {output} = await suggestHighPotentialLeadsPrompt(input);
    return output!;
  }
);
